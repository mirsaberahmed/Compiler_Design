{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww29200\viewh18400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <iostream>\
using namespace std;\
\
int main()\
\{\
   string input;\
   cout<<"Enter a Value :";\
   cin>> input;\
\
   int isNumeric =1;\
   for( int i=0; i<input.length();i++)\{\
    if (input[i] <'0' || input[i] >'9')\{\
        isNumeric =0;\
        break;\
    \}\
   \}\
   if (isNumeric ==1)\
    cout<<"This is Numeric Constant" <<endl;\
   else\
    cout<<"This is not Numeric Constant" <<endl;\
   return 0;\
\}\
\
\
\
\
#include <iostream>\
using namespace std;\
\
int main()\
\{\
   string input;\
   cout<<"Enter an Expression :";\
   cin>> input;\
   int count =1;\
\
   for (int i=0; i< input.length(); i++ )\{\
    char ch = input [i];\
    if (ch == '+'|| ch == '-' || ch =='*' || ch == '/'||ch == '%'|| ch == '=')\{\
        cout<< "operator" << cout << ":" <<ch<< endl;\
        count++;\
    \}\
   \}\
   return 0;\
\}\
\
\
\
#include <iostream>\
using namespace std;\
\
int main() \{\
    string line;\
    cout << "Enter a line: ";\
    getline(cin, line);\
\
    if (line[0] == '/' && line[1] == '/') \{\
        cout << "This is a single-line comment" << endl;\
    \}\
    else if (line[0] == '/' && line[1] == '*' && line[line.length() - 2] == '*' && line[line.length() - 1] == '/') \{\
        cout << "This is a multiline comment" << endl;\
    \}\
    else \{\
        cout << "This is not a comment" << endl;\
    \}\
\
    return 0;\
\}}
1 no---------------------------------------------------------------------------------

#include <iostream>

using namespace std;

int main() {

    string str;

    bool isNumeric = true;

    cout << "Enter input: ";

    cin >> str;

    for (int i = 0; str[i] != '\0'; i++) {

        if (!(str[i] >= '0' && str[i] <= '9')) {

            isNumeric = false;

            break;

        }

    }

    if (isNumeric)

        cout << "Numeric constant" << endl;

    else

        cout << "Not numeric" << endl;

    return 0;

}


2 no-------------------------------------------------------------------------------------

#include <iostream>

using namespace std;

int main() {

    string str;

    cout << " Tanim input: ";

    cin >> str;

    int opCount = 1;


    for (int i = 0; str[i] != '\0'; i++) {

        if (str[i] == '+' || str[i] == '-' || str[i] == '*' || str[i] == '/' || str[i] == '%' || str[i] == '=') {

            cout << "operator" << opCount << ": " << str[i] << endl;

            opCount++;

        }

    }


    if (opCount == 1) {

        cout << "operator not found." << endl;

    }

    return 0;

}

3 no---------------------------------------------------------------------------------------

#include <iostream>

using namespace std;

int main() {

    string str;

    cout << "Enter input: ";

    getline(cin, str);

    if (str[0] == '/' && str[1] == '/') {

        cout << "Single line comment" << endl;

    }

    else if (str[0] == '/' && str[1] == '*' && str[str.length()-2] == '*' && str[str.length()-1] == '/') {

        cout << "Multi-line comment" << endl;

    }

    else {

        cout << "Not a comment" << endl;

    }

    return 0;

}
4. 
#include <iostream>
using namespace std;
int main() {
    string str;
    cout << "Enter input: ";

    cin >> str;
    bool isValid = true;
    if (!((str[0] >= 'A' && str[0] <= 'Z') ||
          (str[0] >= 'a' && str[0] <= 'z') ||
          (str[0] == '_'))) {
        isValid = false;
    } else {
        for (int i = 1; str[i] != '\0'; i++) {
            if (!((str[i] >= 'A' && str[i] <= 'Z') ||
                  (str[i] >= 'a' && str[i] <= 'z') ||
                  (str[i] >= '0' && str[i] <= '9') ||
                  (str[i] == '_'))) 
                isValid = false;
                break;
            }
        }
    }
    if (isValid)
        cout << "Valid identifier" << endl;
    else
        cout << "Not a valid identifier" << endl;
    return 0;
}
 
